GUI:
    updateRate: 5

# Config for the vehicle
# Each module is a seperate system that needs to be started up
Subsystems:    
#    VisionSystem:
#        type: VisionSystem
#        depends_on: ["EventHub", "Vehicle"]
#        priority: "low"
        
#        AdaptiveThresher:
#            foobared: true
#            initialMinPixels: 150
#            foundMinPixelScale: 0.85
#            lostMinPixelScale: 0.75
#            almostHitPercentage: 0.2
#            topRemovePercentage: 0.33
#            bottomRemovePercentage: 0.33
#            redPercentage: 38.0
#            redIntensity: 150
#            maxAspectRatio: 2.0
#        RedLightDetector:
#            initialMinPixels: 150
#            foundMinPixelScale: 0.85
#            lostMinPixelScale: 0.75
#            almostHitPercentage: 0.2
#            topRemovePercentage: 0.33
#            bottomRemovePercentage: 0.3
#            redPercentage: 38.0
#            redIntensity: 150
#            maxAspectRatio: 2.0
#        OrangePipeDetector:
#            rOverGMin: 0.75
#            rOverGMax: 1.5
#            bOverRMax: 0.75
#            centeredLimit: 0.1
#            minBrightness: 100
#            erodeIterations: 3
#        BinDetector:
#            centeredLimit: 0.2
#            sameBinThreshold: 0.2
#            maxAspectRatio: 3
#            blackMaskMinimumPercent: 10
#            blackMaskMaxTotalIntensity: 350
#            whiteMaskMinimumPercent: 30
#            whiteMaskMinimumIntensity: 190
#            incrediblyWashedOut: 1
#        DuctDetector:
#            minRedOverGreen: 0.5
#            maxRedOverGreen: 1.5
#            minRedOverBlue: 1.0
#            minGreenOverBlueOnRedFailureForInsideDuct: 1.1
#            maxRedFailureThresh: 50
#            minTotalRGB: 125
##            minTotalRGBOnFailure: 150
#            erodeIterations: 3
#            dilateIterations: 3
#            minBlackPercent: 5
##            maxBlackTotal: 300
#            defaultGrowThreshX: 0.05
#            defaultGrowThreshY: 0.05
#            minXOverYToUpGrowThresh: 1.5
#            uppedGrowThreshX: 0.5
##            uppedGrowThreshY: 0.05
#        DownwardDuctDetector:
#            minRedOverGreen: 0.5
#            maxRedOverGreen: 1.5
#            minRedOverBlue: 1.0
#            minGreenOverBlueOnRedFailureForInsideDuct: 1.1
#            maxRedFailureThresh: 50
##            minTotalRGB: 125
#            minTotalRGBOnFailure: 150
#        SafeDetector:
#            rOverGMin: 0.9
#            rOverGMax: 4.0
#            bOverRMax: 0.55
#            erodeIterations: 0
#            dilateIterations: 0
#            minTotal: 100
#
#        # Recording Settings
#        maxStreamRate: 1 # Hz
#        maxRecordRate: 5 # Hz
#        forwardFile: forward.avi
#        downwardFile: downward.avi
#        #forwardPort: 50000
        #downwardPort: 50001
    
    EventHub:
        type: EventHub

    # Queues events from background threads so they can be executed in python
    QueuedEventHub:
        depends_on: ["EventHub"]
        type: QueuedEventHub

    # Exectures Motions
    MotionManager:
        type: MotionManager
        depends_on: ["Vehicle", "Controller", "QueuedEventHub", "EventHub"]

    # Handles Timers
    TimerManager:
        type: TimerManager
        depends_on: ["EventHub"]

    Ai:
         type: AI

    StateMachine:
        type: StateMachine
        depends_on: ["EventHub", "QueuedEventHub", "Controller", "Vehicle",
                     "MotionManager", "TimerManager", "Ai"] #, "VisionSystem"]
        States:
            # Gate sub task
            ram.ai.gate.Dive:
                depth: 4 
                speed: 0.33
            ram.ai.gate.Forward:
                time: 40
                speed: 2
 
            # Light/Bouy sub task
            ram.ai.light.Searching:
                sweepAngle: 0
                speed: 2

            ram.ai.light.Seek:
                depthGain: 0.5

            # Duct Sub task
            ram.ai.duct.SeekingToRange:
                filterSize: 10
                desiredRange: 0.5
            ram.ai.duct.SeekingToAligned:
                filterSize: 10
                desiredRange: 0.5
            ram.ai.duct.Aligning:
                filterSize: 10
                desiredRange: 0.5

            # Bin Sub task
            ram.ai.bin.Dive:
                depth: 7
            ram.ai.bin.Seeking:
                speedGain: 3
                maxSpeed: 3
                sidewaysSpeedGain: 3
                maxSidewaysSpeed: 3
            ram.ai.bin.SeekEnd:
                #maxSpeed: 2
                speedGain: 7
                sidewaysSpeedGain: 7
                #maxSidewaysSpeed: 1.5
            ram.ai.bin.SurfaceToMove:
                binDepth: 12
                offset: 4
            ram.ai.bin.Dive:
                binDepth: 12
                offset: 1.2
                yawGain: 0.4
            ram.ai.bin.Centering:
                yawGain: 0.4
            ram.ai.bin.Alinging:
                speedGain: 7
                dSpeedGain: 1.5
                iSpeedGain: 0.5
                sidewaysSpeedGain: 8
                dSidewaysSpeedGain: 1.5
                iSidewaysSpeedGain: 0.5
            ram.ai.bin.Examine:
                targetSuits: ['Diamond', 'Heart']
                speedGain: 5
                dSpeedGain: 1.5
                iSpeedGain: 0.5
                sidewaysSpeedGain: 8
                dSidewaysSpeedGain: 1.5
                iSidewaysSpeedGain: 0.5

            # Sonar subtask
            ram.ai.sonar.CloseSeeking:
                maxSidewaysSpeed: 1
                sidewaysSpeedGain: 2
                maxSpeed: 1
                speedGain: 2
                closeZ: 0.98
            ram.ai.sonar.FarSeeking:
                maxSidewaysSpeed: 3
                sidewaysSpeedGain: 7
                maxSpeed: 3
                speedGain: 7
                midRangeZ: 0.8
            ram.ai.sonar.Hovering:
                maxSidewaysSpeed: 1
                sidewaysSpeedGain: 2
                maxSpeed: 1
                speedGain: 2

            # Vision Safe subtask
            ram.ai.safe.Seeking:
                sidewaysSpeedGain: 4
                maxSidewaysSpeed: 2
            ram.ai.safe.Dive:
                safeDepth: 10
                depthOffset: 1
                diveRate: 0.3
            ram.ai.safe.Grabbing:
                safeDepth: 10 
                depthOffset: 1
            ram.ai.safe.Offsetting:
                speedGain: 1.5
                maxSpeed: 1.2
                sidewaysSpeedGain: 1.5
                maxSidewaysSpeed: 1.2
                offset: -0.4
                centeredRange: 0.6
                sanity: YES
            ram.ai.safe.Centering:
                offset: -0.4
            ram.ai.safe.Settling:
                speedGain: 0.7
                maxSpeed: 1.2
                sidewaysSpeedGain: 4
                maxSidewaysSpeed: 1.5
                offset: -0.4
                duration: 5

            # SONAR & Safe subtask
            ram.ai.sonarSafe.Settling:
                maxSidewaysSpeed: 3
                sidewaysSpeedGain: 3
                maxSpeed: 3
                speedGain: 3
            ram.ai.sonarSafe.Dive:
                #Hilton Pool
                #safeDepth: 6.5
                #depthOffset: 1
                safeDepth: 10.5
                depthOffset: 1
                diveRate: 0.2
                maxSidewaysSpeed: 3
                sidewaysSpeedGain: 3
                maxSpeed: 3
                speedGain: 3
            ram.ai.sonarSafe.PreGrabSettling:
                maxSidewaysSpeed: 2
                sidewaysSpeedGain: 2
                maxSpeed: 2
                speedGain: 2
            ram.ai.sonarSafe.Grabbing:
                # Hilton Pool
                #safeDepth: 6.5
                #depthOffset: 1.5
                safeDepth: 10.5
                depthOffset: 1.5

            # Gate + Pipes + Bouy + Bins + VisSafe + Octagon Mission
            ram.ai.course.PingerDive:
                depth: 1.5
            ram.ai.course.SafeDive:
                depth: 8

            # Gate + Safe + Octagon Mission
            ram.ai.sonarCourse.PingerDive:
                depth: 1.5

            # Gate + Buoy + Safe + Octagon Mission
            ram.ai.buoySonarCourse.Light:
                timeout: 40
            ram.ai.buoySonarCourse.PingerDive:
                depth: 1.5

            # Gate + Pipe + Buoy + Safe + Octagon Mission
            ram.ai.buoyPipeSonarCourse.Gate:
                pipeDelay: 30
            ram.ai.buoyPipeSonarCourse.Pipe:
                aquireTimeout: 20
                doTimeout: 20
            ram.ai.buoyPipeSonarCourse.Light:
                timeout: 40
            ram.ai.buoyPipeSonarCourse.PingerDive:
                depth: 1.5

    # Object that creates the vehicle interface
    Vehicle:
        # The full name of the class to instantiate in this case its a wrapper
        # for the base C++ vehicle
        type: Vehicle
        # Time between updates in ms
        update_interval: 25
        priority: high

        depends_on: ["EventHub", "Logging"]

        # Pressure tranducer calibration 
        depthCalibSlope: 35.4
        depthCalibIntercept: 1192

        # The list of devices to create for the vehicle
        Devices:
            # NOTE: All current numbers here are BS and need to updated

            SensorBoard:
                type: SensorBoard
                update_interval: 25
                priority: high
                depthCalibSlope: 35.5
                depthCalibIntercept: 1182
            MarkerDropper:
                type: SBMarkerDropper
                depends_on: ["SensorBoard"]
            Sonar:
                depends_on: ['SensorBoard']
                type: SBSonar
            Battery1:
                depends_on: ['SensorBoard']
                type: SBPowerSource
                id: 0

            Battery2:
                depends_on: ['SensorBoard']
                type: SBPowerSource
                id: 1

            Batter3:
                depends_on: ['SensorBoard']
                type: SBPowerSource
                id: 2

            Battery4:
                depends_on: ['SensorBoard']
                type: SBPowerSource
                id: 3

            Shore:
                depends_on: ['SensorBoard']
                type: SBPowerSource
                id: 4

            Temp1:
                depends_on: ['SensorBoard']
                type: SBTempSensor
                id: 0

            Temp2:
                depends_on: ['SensorBoard']
                type: SBTempSensor
                id: 5

            Temp3:
                depends_on: ['SensorBoard']
                type: SBTempSensor
                id: 6

            # This entry creates a thruster
            StarboardThruster:
                depends_on: ['SensorBoard']
                # serial: 147
                type: SBThruster
                update_interval: 100

                # String representing the address of the thruster
                address: 1
                # Number determined by testing
                calibration_factor: 0.3652
                # Number used to flip thruster forces (if thruster is reversed
                
                # on the vehicle)
                direction: 1
                # Distance from center of rotation
                offset: 0.1983
            PortThruster:
                depends_on: ['SensorBoard']
                # serial: 149
                type: SBThruster
                address: 0
                calibration_factor: 0.4146
                direction: 1
                offset: 0.1983

            ForeThruster:
                depends_on: ['SensorBoard']
                type: SBThruster
                # serial: 146
                address: 3
                calibration_factor: 0.4368
                direction: -1
                offset: 0.2729

            AftThruster:
                depends_on: ['SensorBoard']
                # Serial 148
                type: SBThruster
                address: 5
                calibration_factor: 0.3612
                direction: -1
                offset: 0.4253

            TopThruster:
                depends_on: ['SensorBoard']
                # serial: 149
                type: SBThruster
                address: 2
                calibration_factor: 0.4146
                direction: 1
                offset: 0.1967

            BottomThruster:
                depends_on: ['SensorBoard']
                type: SBThruster
                address: 4
                calibration_factor: 0.3652
                direction: -1
                offset: 0.1967



            IMU:
                type: IMU
                update_interval: 5
                priority: high
                # These are in VEHICLE FRAME
                # Pre-thruster change out
                #magXBias: -0.229488
                #magYBias: 0.270406
                #magZBias: 0.158325
                # Post Thruster change out, and with 6 thrusters
                #magXBias: -0.260058
                #magYBias: 0.211263
                #magZBias: 0.243511
                # New Electronics
                #magXBias: -0.269084
                #magYBias: 0.221182
                #magZBias: 0.243998
                # Tortuga 2 first dive
                #magXBias: -0.196805
                #magYBias: 0.171669
                #magZBias: 0.251043
                # Tortuga 2 With Everthing
                magXBias: -0.252917
                magYBias: 0.183411
                magZBias: 0.25861
                # Set me to zero to ignore mag.
                #magCorruptThresh: 0.0
                localMagneticPitch: 60
    RemoteController:
        type: RemoteController
        depends_on: ["Controller"]
        update_interval: -1
        yawGain: 50

    Logging:
        type: Logging
        update_interval: -1
        Appenders:
            ThrusterLog:
                type: File
                fileName: thrusters.log
                Layout:
                    type: Pattern
                    pattern: "%m %r%n"
            PowerLog:
                type: File
                fileName: power.log
                Layout:
                    type: Pattern
                    pattern: "%m %r%n"
            ControlLog:
                type: File
                fileName: control.log
                Layout:
                    type: Pattern
                    pattern: "%m %r%n"
                    
            IMULog:
                type: File
                fileName: imu.log
                Layout:
                    type: Pattern
                    pattern: "%m %r%n"
                    
            Console:
                type: Console
                Layout:
                    type: Pattern
                    pattern: "%c %m %r%n"
        Categories:
            Thruster:
                appenders: ['ThrusterLog'] #,'Console']
            Power:
                appenders: ['PowerLog'] #, 'Console']
            Controller:
                appenders: ['ControlLog'] #'Console']
            IMU:
                appenders: ['IMULog'] #'Console']

    Controller:
        depends_on: ["Vehicle", "EventHub"]
        type: BWPDController
        update_interval: 40
        priority: high
        holdCurrentHeading: 1 # Set to 0 to always point north
      
        orientationThreshold: 0.05

        adaptCtrlRotK: 1
        adaptCtrlRotLambda: 1
        adaptCtrlRotGamma: 1

        gyroPDType: 0

        angularPGain: 5
        angularDGain: 1
        speedPGain: 3
        sidewaysSpeedPGain: 3
        # Should not be negative
        depthPGain: 20

#        inertia: [[0.501, 0, 0],
#                  [0, 1.5, 0],
#                  [0, 0, 1.5]]

        desiredSpeed: 0
        desiredDepth: 0.7
        desiredQuaternion: [0, 0, 0, 1]

        # Picks kind of depth controller
        # 1 = P control (Normal)
        # 2 = Observer Control for 2d depth state
        # 3 = Observer Control for 4d depth state
        # 4 = Observer Control with scaling for 4d depth state
        # 5 = PID

        # We want to run controlTypes 1, 3, 4, 5
        # Record 2 runs for each controlType: from depth = 1 to depth = 3
        # and from depth = 1 to depth - 15
        depthControlType: 1
        dtMin: 0.001
        dtMax: 0.05
        
        # Observer Control for 4d depth state (controllers 3 and 4)
        # low gains:
        depthOCIA4: [-0.355, -539.9952, -1.6815, 0,
                      0, -8.4250, 1.0, 0,
                      0.05, -22.1456, -0.575, 0,
                      -0.355, -0.5952, -1.6815, 0]
        depthOCIB4: [539.4, 8.425, 22.1456, 0]
        depthOCIC4: [0, 0, 0, 1]
        # K gains: -2  L gains: -15
        #depthOCIA4: [-6, -70409, -199, 0,
        #               0, -45, 1.0, 0,
        #               0, -667, -1, 0,
        #              -6, -185, -199, 0]
        #depthOCIB4: [70224, 45, 667, 0]
        #depthOCIC4: [0, 0, 0, 1]
        # K gains: -2  L gains: -10
        #depthOCIA4: [-6, -20242, -240, 0,
        #             0, -29, 1.0, 0,
        #              0, -283, -1, 0,
        #             -6, -244, -248, 0]
        #depthOCIB4: [19998, 29, 283, 0]
        #depthOCIC4: [0, 0, 0, 1]

        # Settings for PID Depth Controller (#5)
        # PID 4
        #depthKp: 30
        #depthKi: 0.5
        #depthKd: 10
        # PID 3
        #depthKp: 80
        #depthKi: 0.2
        #depthKd: 30
        # PID 2
        #depthKp: 60
        #depthKi: 0.5
        #depthKd: 20
        # PID 1
        #depthKp: 10
        #depthKi: 0.2
        #depthKd: 4
        # PID 5
        #depthKp: 20
        #depthKi: 0.2
        #depthKd: 4
        # PID 6
        #depthKp: 20
        #depthKi: 1
        #depthKd: 4
