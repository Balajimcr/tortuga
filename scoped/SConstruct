import os

# Import path from environment
env = Environment(ENV = {'PATH' : os.environ['PATH']})

env.Append(CPPFLAGS = ['-O3'], CPPDEFINES = ['NDEBUG'])
#env.Append(CPPFLAGS = ['-g'])
env.Append(CPPPATH = ['/opt/IceE-1.3.0/include'])
env.Append(LIBPATH = ['/opt/IceE-1.3.0/lib'])
env.Append(LIBS = ['IceE'])
env.BuildDir('build','src')
env.Append(CPPPATH = ['#/build/ice'])

if ARGUMENTS.get('bfin', 1):
    t = Tool('bfin-linux-uclibc', ['buildfiles/tools'])
    if t.exists(env):
        t(env)
        env.Append(ASFLAGS = ['-mfdpic'])
        env.Append(LIBS = ['m', 'bfdsp'])
        env.Append(LIBS = ['pthread'])
        fr16patch = env.Library('build/fr16patch', ['build/cos_fr16.asm', 'build/sin_fr16.asm'])
        env.Append(LIBS = [fr16patch])
    else:
        env.Append(CPPPATH = ['/opt/local/include'])
        env.Append(LIBPATH = ['/opt/local/lib'])
        env.Append(LIBS = ['fftw3'])


# NATIVE MARSHALING CODE FOR C++
##############################

env.Command(['build/ice/scope.cpp','build/ice/scope.h'], 
	'../BlackfinScope/scope.ice', '/opt/IceE-1.3.0/bin/slice2cppe --output-dir build/ice $SOURCES')


# EMBEDDED SERVER FOR OSCILLOSCOPE
##############################
env.Program(target = 'build/scoped', source = ['build/main.cpp', 'build/ice/scope.cpp'])
