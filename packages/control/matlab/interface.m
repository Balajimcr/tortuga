function [methodinfo,structs,enuminfo]=test;
%This function was generated by the perl file prototypes.pl called from loadlibary.m on Thu Jun 28 18:24:32 2007
%perl options:'demo_controller.i -outfile=test.m'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival);
structs=[];enuminfo=[];fcnNum=1;
%  void translationalController(MeasuredState* measuredState, DesiredState* desiredState, ControllerState* controllerState, double dt, double* translationalForces); 
fcns.name{fcnNum}='translationalController'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'MeasuredStatePtr', 'DesiredStatePtr', 'ControllerStatePtr', 'double', 'doublePtr'};fcnNum=fcnNum+1;
%  void testMeasured(MeasuredState* measuredState); 
fcns.name{fcnNum}='testMeasured'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'MeasuredStatePtr'};fcnNum=fcnNum+1;
%  void testDesired(DesiredState* desiredState); 
fcns.name{fcnNum}='testDesired'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'DesiredStatePtr'};fcnNum=fcnNum+1;
%  void testController(ControllerState* controllerState); 
fcns.name{fcnNum}='testController'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'ControllerStatePtr'};fcnNum=fcnNum+1;
%  void testStruct(TestStruct* test); 
fcns.name{fcnNum}='testStruct'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'TestStructPtr'};fcnNum=fcnNum+1;
structs.DesiredState.packing=8;
structs.DesiredState.members=struct('speed', 'double', 'depth', 'double', ...
   'q0', 'double', 'q1', 'double', 'q2', 'double', 'q3', 'double',  ...
   'w0', 'double', 'w1', 'double', 'w2', 'double');
structs.MeasuredState.packing=8;
structs.MeasuredState.members=struct('depth', 'double', ...
    'a0', 'double', 'a1', 'double', 'a2', 'double', ...
    'q0', 'double', 'q1', 'double', 'q2', 'double', 'q3', 'double', ...
    'w0', 'double', 'w1', 'double', 'w2', 'double');
structs.ControllerState.packing=8;
structs.ControllerState.members=struct(...
    'i0', 'double', 'i1', 'double', 'i2', 'double', ...
    'i3', 'double',  'i4', 'double', 'i5', 'double',...
    'ad0', 'double', 'ad1', 'double', 'ad2', 'double',...
    'ad3', 'double', 'ad4', 'double', 'ad5', 'double',... 
    'ad6', 'double', 'ad7', 'double', 'ad8', 'double',...
    'ag0', 'double', 'ag1', 'double', 'ag2', 'double',...
    'ag3', 'double', 'ag4', 'double', 'ag5', 'double',... 
    'ag6', 'double', 'ag7', 'double', 'ag8', 'double',...
    'depthPGain', 'double', 'speedPGain', 'double');
structs.TestStruct.packing=8;
structs.TestStruct.members=struct('depth', 'double', 'q0', 'double', 'q1', 'double', 'q2', 'double', 'q3', 'double');
methodinfo=fcns;