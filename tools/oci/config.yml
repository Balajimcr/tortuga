# Config for the vehicle

# Each module is a seperate system that needs to be started up
Modules:
    # Object that creates the vehicle interface
    Vehicle:
        # The full name of the class to instantiate in this case its a wrapper
        # for the base C++ vehicle
        type: vehicle.vehicle.Vehicle
        # Time between updates in ms
        update_interval: 100

        # The list of devices to create for the vehicle
        Devices:
            # NOTE: All current numbers here are BS and need to updated

            # This entry creates a thruster
            StarboardThruster:
                # serial: 147
                
                # Notice this is from the 'ext' package, this package contains
                # all the wrapped C++ classes
                type: ext.vehicle_device.Thruster
                # String representing the address of the thruster
                address: "02"
                # Number determined by testing
                calibration_factor: 0.3652
                # Number used to flip thruster forces (if thruster is reversed
                # on the vehicle)
                direction: -1

            PortThruster:
                # serial: 149
                type: ext.vehicle_device.Thruster
                address: "03"
                calibration_factor: 0.4146
                direction: -1

            ForeThruster:
                # serial: 146
                type: ext.vehicle_device.Thruster
                address: "04"
                calibration_factor: 0.4368
                direction: 1

            AftThruster:
                # Serial 148
                type: ext.vehicle_device.Thruster
                address: "01"
                calibration_factor: 0.3612
                direction: -1

            IMU:
                type: ext.vehicle_device.IMU
                update_interval: 19     

    Controller:
        type: control.bwpdcontrol.BWPDController
        update_interval: 20

        
        
    
    
    
