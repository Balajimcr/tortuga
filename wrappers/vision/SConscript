# Copyright (C) 2007 Maryland Robotics Club
# Copyright (C) 2007 Joseph Lisee <jlisee@umd.edu>
# All rights reserved.
#
# Author: Joseph Lisee <jlisee@umd.edu>
# File:  wrappers/pattern/SConscript

import os

# Build System imports
import buildfiles.wrap as wrap
import buildfiles.libs as libs
import buildfiles.helpers as helpers

Import('env')
envl = env.Clone()

# Link in internal libraries
libs.add_internal(envl, 'vision')
#if env.HasFeature('core'):
#    libs.add_internal(envl, 'core')

# Find all cpp files in the source directory
extra_sources = envl.Glob('src', '*.cpp')
extra_dir = os.path.join(os.environ['RAM_SVN_DIR'], 'wrappers', 'vision')
envl.Append(CPPPATH = os.path.abspath(os.environ['RAM_SVN_DIR']))

# Vision library directories
base_dir = os.path.join(os.environ['RAM_SVN_DIR'], 'packages', 'vision')
header_dir = os.path.join(base_dir, 'include')

# Need for because Py++ has so odd include paths
envl.Append(CPPPATH = base_dir)

# Headers we are currently wrapping
wrapped_headers = ['Events.h',
                   'VisionSystem.h']
wrapped_headers = [os.path.join(header_dir, h) for h in wrapped_headers]

# Wrappers
libs.add_external(envl, 'Boost.Python')
envl.Pypp('vision', wrapped_headers, module = 'gen_vision.py',
          dep_wrappers = ['_core', 'core.py'], 
          dont_build = ['SubsystemList.pypp.cpp'],
          extra_sources = [os.path.join(extra_dir, s) for s in extra_sources])