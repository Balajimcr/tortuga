A checksum is computed by adding all the bytes transmitted or recieved so far.
Checksums are always 8 bits long, so the checksum should be computed mod 256.
(Ie, take the last 8 bits of the result)

'on bad checksum' means the checksum for the command did not properly verify
'on failure' means the command was not completed due to internal error of the board

Command: Ping
Description: Test communication with sensor board
Send:  [0x00 0x00]
Reply: [0xBC] on success
       [0xCC] on bad checksum



Command: System Check
Description: Ask sensor board to verify operation of all its processors.
Send:  [0x01 0x01]
Reply: [0xBC] on success
       [0xDF] on failure (this may be expanded to be more specific in the future)
       [0xCC] on bad checksum



Command: Get Depth
Description: Retrieve the latest depth value.
Send:  [0x02 0x02]
Reply: [0x03 MSB LSB Checksum] on success
       [0xDF] on failure
       [0xCC] on bad checksum



Command: Get water, power board, and start switch status
Description: Retrieve a 1-byte status of various pins.
Send:  [0x04 0x04]
Reply: [0x05 Status Checksum] on success
       [0xDF] on failure
       [0xCC] on bad checksum

       Status Bit 0    = Water (0=Dry, 1=Wet)
       Status Bit 1    = Start Switch (0=Off, 1=On)
       Status Bits 1-4 = Balancer board status lines



Command: Hard power kill
Description: Ask balancer board to cut off all power.
Send:  [0x06 0xDE 0xAD 0xBE 0xEF 0x3E]
Reply: [0xBC] if the command was issued to slave controller
       [0xCC] if the command sequence was malformed
       [0xDF] if the command was recieved but its execution failed

The command sequence is deliberately long and complex to prevent accidental activation.
After issuing this command, the host should still perform various shut-down tasks, in the
event that the hard kill command fails. 0xCC is returned if the command was NOT issued
because a part of the 'safety sequence' was not received properly. A reply of 0xBC means
that the command was received successfully, but if the host is still alive to receive this
reply, it means that the hard kill obviously failed and other measures must be taken. A
reply of 0xDF means that the safety sequence was right, but the chip responsible for
telling the balancer board to kill power did not respond to the request.



Command: Drop marker
Description: Ask balancer board to drop one of the markers.
Send:  [0x07 Marker Checksum]
Reply: [0xBC] on success
       [0xDF] on failure
       [0xCC] on bad checksum

This will drop the given marker. 'Marker' can be 0 or 1, corresponding to one of the two
markers. A value of the marker byte other than 0 or 1 will result in a response of 0xCC.
A successful reply indicates only that the command was relayed to the chip connected to
the balancer board, and does not mean that the marker was actually dropped. There is no
feedback if it was actually released, or if it got stuck, or if that marker was dropped
earlier.


